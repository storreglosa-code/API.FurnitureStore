REGISTER ENDPOINT (Video 35)

[FromBody] 
En el cuerpo del request tiene que enviarse todas las propiedades de la clase USER REGISTRATION REQUEST DTO (Name, Email, Password)

Lo primero que se hace es chequear que el modelo que se recibe sea valido 
 if (!ModelState.IsValid) return BadRequest();

Si es valido, se valida si el Email que proporcionan ya existe.
var emailExists = await _userManager.FindByEmailAsync(request.EmailAddress); --> Esto devuelve un IdentityUser. --> Si ya existe se devuelve BadRequest con el mensaje de error "Email ya existe"

Sino, se crea el usuario:
var user = new IdentityUser()
{
    Email = request.EmailAddress,
    UserName = request.EmailAddress
};

var isCreated = await _userManager.CreateAsync(user); ----> SE USA _USERMANAGER, propio de la librería IdentityUser que trae consigo varios métodos y propiedades útiles para la gestión de Usuarios.

if (isCreated.Succeeded)  			------> Si se crea correctamente --> Se genera un token y se devuelve. 
{
    var token = GenerateToken(user);
    return Ok(new AuthResult()
    {
        Result = true,
        Token = token
    });
}

 else						------> Si NO SE CREA correctamente --> Se devuelve el listado de errores.
 { 
     var errors = new List<string>();
     foreach (var err in isCreated.Errors)
         errors.Add(err.Description);

     return BadRequest(new AuthResult
     { 
         Result = false,
         Errors = errors
     });
 }